CREATE TABLE IF NOT EXISTS mpa_rating (
  id SERIAL PRIMARY KEY,
  name VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
--todo change to `id` bigint(20) generated by default as identity primary key NOT NULL
  id serial PRIMARY KEY,
  name varchar(255) not null,
  description varchar(255),
  releaseDate date,
  duration smallint,
  rate INT,
  mpa_id INT,
  FOREIGN KEY (mpa_id) REFERENCES mpa_rating (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS genres (
  id serial PRIMARY KEY,
  name varchar(255) not null
);

CREATE TABLE IF NOT EXISTS film_genre (
  film_id bigint not null,
  genre_id bigint not null,
  FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
  FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE,
  CONSTRAINT film_genre_pkey PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
  id serial PRIMARY KEY,
  email varchar(100) UNIQUE NOT NULL,
  login varchar(50) UNIQUE NOT NULL,
  name varchar(100),
  birthday date
);

CREATE TABLE IF NOT EXISTS friendship (
  user_id bigint REFERENCES users(id) ON DELETE CASCADE,
  friend_id bigint REFERENCES users(id) ON DELETE CASCADE,
  confirmed boolean not null default false,
  CONSTRAINT friendship_pkey PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
  user_id bigint not null,
  film_id bigint not null,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
  CONSTRAINT likes_pkey PRIMARY KEY (user_id, film_id)
);

